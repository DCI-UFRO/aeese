{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Architecture for Enabling Embedded Systems Engineering by Components Properties Identification through Genetic Algorithms The developed experiment explained in this page has seven elements. The computer, a controller, two sensors (current consumption and thrust), one motor driver, one power supply, and one DC motor. The chosen controller for the experiment was an Arduino MKR1000, capable of sending and receiving multiple streams of data over serial communication with Matlab or R on the computer. The required sensors were a strain gauge to measure the thrust produced by the DC motor and a current sensor to evaluate the power consumed. The power supply and the motor driver provide energy to the motor, and through a PWM signal, the GA can modify the rotation intensity.","title":"Home"},{"location":"#architecture-for-enabling-embedded-systems-engineering-by-components-properties-identification-through-genetic-algorithms","text":"The developed experiment explained in this page has seven elements. The computer, a controller, two sensors (current consumption and thrust), one motor driver, one power supply, and one DC motor. The chosen controller for the experiment was an Arduino MKR1000, capable of sending and receiving multiple streams of data over serial communication with Matlab or R on the computer. The required sensors were a strain gauge to measure the thrust produced by the DC motor and a current sensor to evaluate the power consumed. The power supply and the motor driver provide energy to the motor, and through a PWM signal, the GA can modify the rotation intensity.","title":"Architecture for Enabling Embedded Systems Engineering by Components Properties Identification through Genetic Algorithms"},{"location":"actuadores/","text":"Actuator Motor Driver To provide the motor energy from an external power supply and control the motor through a PWM signal, is used the L298N driver. Motor The motor used in the experiment is a generic 12V wihtout documentation.","title":"Actuators"},{"location":"actuadores/#actuator","text":"","title":"Actuator"},{"location":"actuadores/#motor-driver","text":"To provide the motor energy from an external power supply and control the motor through a PWM signal, is used the L298N driver.","title":"Motor Driver"},{"location":"actuadores/#motor","text":"The motor used in the experiment is a generic 12V wihtout documentation.","title":"Motor"},{"location":"controlador/","text":"Controller Arduino For the experiment is required a controller capable of effective communication through serial port. The selected device was the arduino MKR1000. Sensors The controller must have at least two analog pins available to connect the next sensors. Thrust sensor Current Sensor Actuator The actuator only require a PWM pin from the controller to give power to the motor through a motor driver .","title":"Controller"},{"location":"controlador/#controller","text":"","title":"Controller"},{"location":"controlador/#arduino","text":"For the experiment is required a controller capable of effective communication through serial port. The selected device was the arduino MKR1000.","title":"Arduino"},{"location":"controlador/#sensors","text":"The controller must have at least two analog pins available to connect the next sensors. Thrust sensor Current Sensor","title":"Sensors"},{"location":"controlador/#actuator","text":"The actuator only require a PWM pin from the controller to give power to the motor through a motor driver .","title":"Actuator"},{"location":"documentacion/","text":"Code in the Arduino Sensors Thrust Sensor To use the strain gauge it's needed a external library, and can be found on the arduino library , the next code show the necesary instruction in the arduino languaje only for this sensor. #include \"HX711.h\" // HX711 Amplificador const int LOADCELL_DOUT_PIN = 1 ; const int LOADCELL_SCK_PIN = 5 ; HX711 scale ; double p ; //... void setup () { Serial . begin ( 115200 ); //... scale . begin ( LOADCELL_DOUT_PIN , LOADCELL_SCK_PIN ); scale . set_scale ( 417.6153340635268 ); scale . tare (); pinMode ( enA , OUTPUT ); pinMode ( in1 , OUTPUT ); pinMode ( in2 , OUTPUT ); //... } void loop () { p = scale . get_units ( 30 ); //... Serial . println ( p , 4 ); //... } Current Sensor The next code show the necesary instruction in the arduino languaje only for this sensor. float sensibility = 0.285 ; void setup () { // put your setup code here, to run once: Serial . begin ( 115200 ); / ... pinMode ( enA , OUTPUT ); pinMode ( in1 , OUTPUT ); pinMode ( in2 , OUTPUT ); } float get_corriente ( int n_muestras ){ float voltajeSensor ; float corriente = 0 ; for ( int i = 0 ; i < n_muestras ; i ++ ){ voltajeSensor = analogRead ( A0 ) * ( 5.00 / 1023.00 ); ////Sensor Reading corriente = corriente + ( voltajeSensor - 3.8331 ) / Sensibilidad ; //get the current } corriente = corriente / n_muestras ; return ( corriente ); } void loop () { c = get_corriente ( 20 ); //... Serial . println ( c , 4 ); //... } Actuator Motor Driver The next code show the necesary instruction in the arduino languaje only for the motor driver. int enA = 2 ; int in1 = 4 ; int in2 = 3 ; void setup () { Serial . begin ( 115200 ); //... pinMode ( enA , OUTPUT ); pinMode ( in1 , OUTPUT ); pinMode ( in2 , OUTPUT ); } void speedControl ( int velocidad ) { digitalWrite ( in1 , LOW ); digitalWrite ( in2 , HIGH ); analogWrite ( enA , velocidad ); delay ( 3500 ); //... analogWrite ( enA , 0 ); } void loop () { //... double x1 ; if ( Serial . available () > 0 ){ float data = Serial . parseFloat (); if ( data > 0 ){ x1 = int ( data ); speedControl ( x1 ); } //... } / ... } Complete Code for Arduino The complete code that contains the sensors, actuator and the serial communication enabled. you can download it here","title":"Arduino Documentation"},{"location":"documentacion/#code-in-the-arduino","text":"","title":"Code in the Arduino"},{"location":"documentacion/#sensors","text":"","title":"Sensors"},{"location":"documentacion/#thrust-sensor","text":"To use the strain gauge it's needed a external library, and can be found on the arduino library , the next code show the necesary instruction in the arduino languaje only for this sensor. #include \"HX711.h\" // HX711 Amplificador const int LOADCELL_DOUT_PIN = 1 ; const int LOADCELL_SCK_PIN = 5 ; HX711 scale ; double p ; //... void setup () { Serial . begin ( 115200 ); //... scale . begin ( LOADCELL_DOUT_PIN , LOADCELL_SCK_PIN ); scale . set_scale ( 417.6153340635268 ); scale . tare (); pinMode ( enA , OUTPUT ); pinMode ( in1 , OUTPUT ); pinMode ( in2 , OUTPUT ); //... } void loop () { p = scale . get_units ( 30 ); //... Serial . println ( p , 4 ); //... }","title":"Thrust Sensor"},{"location":"documentacion/#current-sensor","text":"The next code show the necesary instruction in the arduino languaje only for this sensor. float sensibility = 0.285 ; void setup () { // put your setup code here, to run once: Serial . begin ( 115200 ); / ... pinMode ( enA , OUTPUT ); pinMode ( in1 , OUTPUT ); pinMode ( in2 , OUTPUT ); } float get_corriente ( int n_muestras ){ float voltajeSensor ; float corriente = 0 ; for ( int i = 0 ; i < n_muestras ; i ++ ){ voltajeSensor = analogRead ( A0 ) * ( 5.00 / 1023.00 ); ////Sensor Reading corriente = corriente + ( voltajeSensor - 3.8331 ) / Sensibilidad ; //get the current } corriente = corriente / n_muestras ; return ( corriente ); } void loop () { c = get_corriente ( 20 ); //... Serial . println ( c , 4 ); //... }","title":"Current Sensor"},{"location":"documentacion/#actuator","text":"","title":"Actuator"},{"location":"documentacion/#motor-driver","text":"The next code show the necesary instruction in the arduino languaje only for the motor driver. int enA = 2 ; int in1 = 4 ; int in2 = 3 ; void setup () { Serial . begin ( 115200 ); //... pinMode ( enA , OUTPUT ); pinMode ( in1 , OUTPUT ); pinMode ( in2 , OUTPUT ); } void speedControl ( int velocidad ) { digitalWrite ( in1 , LOW ); digitalWrite ( in2 , HIGH ); analogWrite ( enA , velocidad ); delay ( 3500 ); //... analogWrite ( enA , 0 ); } void loop () { //... double x1 ; if ( Serial . available () > 0 ){ float data = Serial . parseFloat (); if ( data > 0 ){ x1 = int ( data ); speedControl ( x1 ); } //... } / ... }","title":"Motor Driver"},{"location":"documentacion/#complete-code-for-arduino","text":"The complete code that contains the sensors, actuator and the serial communication enabled. you can download it here","title":"Complete Code for Arduino"},{"location":"lab/","text":"The Laboratory The arduino and his conection to the sensors and acuators are shown in the next picture. The infrastructure for the testig can be seen in the next picture.","title":"Laboratory"},{"location":"lab/#the-laboratory","text":"The arduino and his conection to the sensors and acuators are shown in the next picture. The infrastructure for the testig can be seen in the next picture.","title":"The Laboratory"},{"location":"matlab/","text":"","title":"Matlab"},{"location":"r/","text":"R-Studio The code on for R Requires 2 codes to work: The function to optimize The Genetic algorithm Functions to optimize Thrust current function This function set the PWM signal and maximize the relation between thrust and current. Thrust current Code Maximum Thrust function This function set the PWM signal and determine the maximum thrust. Thrust current Code Minimum Thrust function This function set the PWM signal and determine the minimum thrust greater than 0. Thrust current Code The genetic algorithmn For this function it is required complementary function for the connection to the arduino, the storage. Genetic algorithmn code Algorithmn for R, Initializer Algorithmn for R, Data transformation Algorithmn for R, connection and Genetic Algorithm Storage Storage","title":"R-Studio"},{"location":"r/#r-studio","text":"The code on for R Requires 2 codes to work: The function to optimize The Genetic algorithm","title":"R-Studio"},{"location":"r/#functions-to-optimize","text":"","title":"Functions to optimize"},{"location":"r/#thrust-current-function","text":"This function set the PWM signal and maximize the relation between thrust and current. Thrust current Code","title":"Thrust current function"},{"location":"r/#maximum-thrust-function","text":"This function set the PWM signal and determine the maximum thrust. Thrust current Code","title":"Maximum Thrust function"},{"location":"r/#minimum-thrust-function","text":"This function set the PWM signal and determine the minimum thrust greater than 0. Thrust current Code","title":"Minimum Thrust function"},{"location":"r/#the-genetic-algorithmn","text":"For this function it is required complementary function for the connection to the arduino, the storage.","title":"The genetic algorithmn"},{"location":"r/#genetic-algorithmn-code","text":"Algorithmn for R, Initializer Algorithmn for R, Data transformation Algorithmn for R, connection and Genetic Algorithm","title":"Genetic algorithmn code"},{"location":"r/#storage","text":"Storage","title":"Storage"},{"location":"resultados/","text":"Result Results with R All the results of various instances are in the following zip file. Results with R + Arduino","title":"Results"},{"location":"resultados/#result","text":"","title":"Result"},{"location":"resultados/#results-with-r","text":"All the results of various instances are in the following zip file. Results with R + Arduino","title":"Results with R"},{"location":"sensores/","text":"Sensors Trust sensor To measure the thrust of the sistem, it's used a strain gauge of 5kg, that requires an amplifier, the one used in this for this sensor is the HX711. Current Sensor This sensor measure the power consumption of the motor through the different intensities in the experiment. The sensor in the image is the ACS712.","title":"Sensors"},{"location":"sensores/#sensors","text":"","title":"Sensors"},{"location":"sensores/#trust-sensor","text":"To measure the thrust of the sistem, it's used a strain gauge of 5kg, that requires an amplifier, the one used in this for this sensor is the HX711.","title":"Trust sensor"},{"location":"sensores/#current-sensor","text":"This sensor measure the power consumption of the motor through the different intensities in the experiment. The sensor in the image is the ACS712.","title":"Current Sensor"}]}